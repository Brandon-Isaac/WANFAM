name: Setup Repository Variables

on:
  workflow_dispatch:
    inputs:
      default_reviewers:
        description: 'Comma-separated list of default reviewers (usernames without @)'
        required: false
        default: 'isaac'
        type: string
      max_reviewers:
        description: 'Maximum number of reviewers to assign per PR'
        required: false
        default: '2'
        type: string

jobs:
  setup-variables:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repository variables
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            // Set DEFAULT_REVIEWERS variable
            const defaultReviewers = '${{ inputs.default_reviewers }}';
            const maxReviewers = '${{ inputs.max_reviewers }}';
            
            try {
              // Check if variable exists and update or create
              try {
                await github.rest.actions.updateRepoVariable({
                  owner,
                  repo,
                  variable_name: 'DEFAULT_REVIEWERS',
                  value: defaultReviewers
                });
                console.log(`‚úÖ Updated DEFAULT_REVIEWERS: ${defaultReviewers}`);
              } catch (error) {
                if (error.status === 404) {
                  await github.rest.actions.createRepoVariable({
                    owner,
                    repo,
                    variable_name: 'DEFAULT_REVIEWERS',
                    value: defaultReviewers
                  });
                  console.log(`‚úÖ Created DEFAULT_REVIEWERS: ${defaultReviewers}`);
                } else {
                  throw error;
                }
              }
              
              // Set MAX_REVIEWERS variable
              try {
                await github.rest.actions.updateRepoVariable({
                  owner,
                  repo,
                  variable_name: 'MAX_REVIEWERS',
                  value: maxReviewers
                });
                console.log(`‚úÖ Updated MAX_REVIEWERS: ${maxReviewers}`);
              } catch (error) {
                if (error.status === 404) {
                  await github.rest.actions.createRepoVariable({
                    owner,
                    repo,
                    variable_name: 'MAX_REVIEWERS',
                    value: maxReviewers
                  });
                  console.log(`‚úÖ Created MAX_REVIEWERS: ${maxReviewers}`);
                } else {
                  throw error;
                }
              }
              
              console.log('');
              console.log('üéâ Repository variables configured successfully!');
              console.log('');
              console.log('Current configuration:');
              console.log(`- Default reviewers: ${defaultReviewers}`);
              console.log(`- Max reviewers per PR: ${maxReviewers}`);
              console.log('');
              console.log('These variables work alongside your CODEOWNERS file to determine PR reviewers.');
              
            } catch (error) {
              console.error('‚ùå Failed to setup repository variables:', error.message);
              core.setFailed('Failed to setup repository variables');
            }
